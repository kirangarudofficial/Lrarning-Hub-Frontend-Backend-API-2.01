version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: learning_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/learning_platform?schema=public
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  # User Service
  user-service:
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/learning_platform?schema=public
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  # Course Service
  course-service:
    build:
      context: .
      dockerfile: apps/course-service/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/learning_platform?schema=public
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  # Enrollment Service
  enrollment-service:
    build:
      context: .
      dockerfile: apps/enrollment-service/Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/learning_platform?schema=public
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: apps/payment-service/Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/learning_platform?schema=public
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: apps/notification-service/Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/learning_platform?schema=public
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules

  # Media Service
  media-service:
    build:
      context: .
      dockerfile: apps/media-service/Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/learning_platform?schema=public
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data: